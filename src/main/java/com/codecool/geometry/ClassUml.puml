@startuml
Shape <|-- Circle
Shape <|-- EquilateralTriangle
Shape <|-- Rectangle
Shape <|-- RegularPentagon
Shape <|-- Square
Shape <|-- Triangle

abstract class Shape {
  + {abstract} double calculateArea()
  + {abstract} double calculatePerimeter()
}

class Circle {
  - {field} double r
  + double calculateArea()
  + double calculatePerimeter()
  + String toString()
}
class EquilateralTriangle{
  - {field} double a
  + double calculateArea()
  + double calculatePerimeter()
  + String toString()
}
class Rectangle{
  - {field} double a
  - {field} double b
  + double calculateArea()
  + double calculatePerimeter()
  + String toString()
}
class RegularPentagon{
  - {field} double a
  + double calculateArea()
  + double calculatePerimeter()
  + String toString()
}
class Square{
  - {field} double a
  + double calculateArea()
  + double calculatePerimeter()
  + String toString()
}
class Triangle{
  - {field} double a
  - {field} double b
  - {field} double c
  - {field} double s
  + double calculateArea()
  + double calculatePerimeter()
  + String toString()
}

ShapeCollection o-- Circle
ShapeCollection o-- EquilateralTriangle
ShapeCollection o-- Rectangle
ShapeCollection o-- RegularPentagon
ShapeCollection o-- Square
ShapeCollection o-- Triangle

class ShapeCollection {
  + double getLargestShapeByPerimeter()
  + double getLargestShapeByArea()
  + void getShapesTable()
  + void addShape()
  + getShapes()
}

Main *-- ShapeCollection
Main *-- FormulaProvider

class Main{
  + void addShape()
  + void getShapes()
  + double getLargestShapeByPerimeter()
  + double getLargestShapeByArea()
  + String getAreaForShape()
  + String getPerimeterForShape()
}

class FormulaProvider {
  + String getAreaForShape()
  + String getPerimeterForShape()
}

@enduml